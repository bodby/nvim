{
  "class": {
    "prefix": "class",
    "body": [
      "local M = { }",
      "",
      "function M.${1:new}($2)",
      "\t$0",
      "end",
      "",
      "return M"
    ]
  },

  "local": {
    "prefix": "local",
    "body": "local ${1:x} = $0"
  },
  "function": {
    "prefix": "function",
    "body": [
      "function ${1:f}($2)",
      "$0",
      "end"
    ]
  },
  "lambda": {
    "prefix": [ "lambda", "anonymous-function" ],
    "body": [
      "function($1)",
      "$0",
      "end"
    ]
  },
  "pcall": {
    "prefix": "pcall",
    "body": "local ${1:status}, ${2:value} = pcall(${3:command})$0"
  },
  "require": {
    "prefix": "require",
    "body": "require \"${1:path.to.module}\"$0"
  },
  "local-require": {
    "prefix": "local-require",
    "body": "local ${1:identifier} = require \"${2:path.to.module}\"$0"
  },
  "return": {
    "prefix": "return",
    "body": "return $0"
  },
  "if": {
    "prefix": "if",
    "body": [
      "if ${1:true} then",
      "\t$0",
      "end"
    ]
  },
  "elseif": {
    "prefix": [ "elseif", "elif" ],
    "body": [
      "elseif ${1:true} then",
      "\t$0",
      "end"
    ]
  },
  "for": {
    "prefix": "for",
    "body": [
      "for ${1:i} = ${2:1},${3:10} do",
      "\t$0",
      "end"
    ]
  },
  "foreach": {
    "prefix": "foreach",
    "body": [
      "for ${1:i} in pairs(${2:table}) do",
      "\t$0",
      "end"
    ]
  },
  "while": {
    "prefix": "while",
    "body": [
      "while ${1:true} do",
      "\t$0",
      "end"
    ]
  }
}
